{"version":3,"sources":["components/Category/Category.js","components/Timer/Timer.js","components/Modal/Modal.js","components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["Category","props","className","children","Timer","nextProps","nextState","timerTime","this","console","log","starttimer","Component","Modal","answer","showAnswer","showModal","modalHeader","question","onClick","hideModal","answerButton","Card","cardItems","cards","map","card","i","key","id","answered","showModalHandler","title","e","showAnswerHandler","App","state","index","value","cardsArray","setState","resetCountDown","hideModalHandler","stopPropagation","startTimer","timer","setTimeout","newTime","clearInterval","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10f091dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Category.css';\r\n\r\nconst Category = (props) => {\r\n    return (\r\n        <div className=\"category\">\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category; ","import React, {Component} from 'react';\r\nimport './Timer.css';\r\n\r\nclass Timer extends Component {\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n    return nextProps.timerTime !== this.props.timerTime;  \r\n    }\r\n    \r\n    componentDidUpdate () {\r\n        console.log('[Timer] DidUpdate');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Timer\" starttimer={this.props.starttimer()}>{this.props.timerTime} seconds</div>\r\n        )\r\n    }\r\n}\r\n\r\n// const Timer = (props) => {\r\n//     return (\r\n//         <div className=\"Timer\" startTimer={props.startTimer()}>{props.timerTime} seconds</div>\r\n//     )\r\n// }\r\n\r\nexport default Timer; ","import React, {Component } from \"react\";\r\nimport Timer from '../Timer/Timer';\r\nimport './Modal.css'\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        console.log('Modal props')\r\n\r\n        let answer = null;\r\n        if(this.props.showAnswer) {\r\n            answer = this.props.answer;\r\n        }\r\n\r\n      return (\r\n        this.props.showModal ?\r\n        <div className=\"Modal\">\r\n\r\n            <div className=\"header\">\r\n            <h1>{this.props.modalHeader}</h1>\r\n            </div>\r\n\r\n            <div className=\"text\">\r\n                <p><u>{this.props.question}?</u></p>\r\n                <p>{answer}</p>\r\n            </div>\r\n            \r\n            <div className=\"timer\">\r\n                <Timer starttimer={this.props.starttimer} timerTime={this.props.timerTime}/>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n                <button className=\"closeButton\" onClick={this.props.hideModal}>Close</button>\r\n                <button className=\"answerButton\" onClick={this.props.answerButton}>Answer</button>\r\n            </div>\r\n\r\n        </div> : null\r\n      )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n    \r\n    componentDidUpdate () {\r\n    console.log('[Card] DidUpdate');\r\n    }\r\n\r\n    render() {\r\n        const cardItems = this.props.cards.map((card, i) => {\r\n            return (\r\n                <div \r\n                    key={i}\r\n                    id={card.id} \r\n                    className={\"col-md-2 card \" + (!card.answered ? \"notAnsweredCard\" : \"answeredCard\")} \r\n                    onClick={() => this.props.showModalHandler(i, card.id)}\r\n                    >\r\n                    <p>{card.title}</p>\r\n                    <Modal \r\n                    showAnswer={card.showAnswer}\r\n                    showModal={card.showModal === card.id}\r\n                    modalHeader={card.modalHeader}\r\n                    question={card.question}\r\n                    answer={card.answer}\r\n                    hideModal = {(e) => this.props.hideModal(e, i)}\r\n                    answerButton={(e) => this.props.showAnswerHandler(e, i)}\r\n                    timerTime={this.props.timerTime}\r\n                    starttimer={this.props.starttimer}\r\n                    >\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"card-row\"> \r\n            {cardItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card; ","import React, { Component } from 'react';\nimport Category from './components/Category/Category';\nimport Card from './components/Card/Card';\nimport './App.css'; \n\nclass App extends Component {\n  state = {\n    cards: [\n      {\n        title: '100',\n        modalHeader: 'Mom: 100 pts',\n        question: 'What is Moms favorite color',\n        answer: 'All shades of green',\n        id: 1,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '100',\n        modalHeader: 'Dad: 100 pts',\n        question: 'Which city was dad born in',\n        answer: 'Midvodi',\n        id: 2,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '100',\n        modalHeader: 'Lily: 100 pts',\n        question: 'What origin is the name Lily',\n        answer: 'Old English and Latin',\n        id: 3,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '100',\n        modalHeader: 'Wedding Bells: 100 pts',\n        question: 'What is the most popular wedding month',\n        answer: 'June',\n        id: 4,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '100',\n        modalHeader: 'Random: 100 pts',\n        question: 'Name the largest freshwater lake in the world',\n        answer: 'Lake Superior',\n        id: 5,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '200',\n        modalHeader: 'Mom: 200 pts',\n        question: 'What year did mom enrolls to NCC',\n        answer: '2008',\n        id: 6,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '200',\n        modalHeader: 'Dad: 200 pts',\n        question: 'Where did dad serve in the military',\n        answer: 'Siberia (Taiga)',\n        id: 7,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '200',\n        modalHeader: 'Lily: 200 pts',\n        question: 'Which famous nurse was known as “The Lady Of The Lamp” during the crimean war',\n        answer: 'Florence Nightingale',\n        id: 8,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '200',\n        modalHeader: 'Wedding Bells: 200 pts',\n        question: 'Most popular wedding destination',\n        answer: 'Las Vegas',\n        id: 9,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '200',\n        modalHeader: 'Random: 200 pts',\n        question: 'What is the world’s longest river',\n        answer: 'Amazon',\n        id: 10,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '300',\n        modalHeader: 'Mom: 300 pts',\n        question: 'What are the names of grandparents that raised mom',\n        answer: 'Grandma Polya and grandpa Peter',\n        id: 11,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '300',\n        modalHeader: 'Dad: 300 pts',\n        question: 'Who did dad want to be when he was a kid',\n        answer: 'Driver',\n        id: 12,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '300',\n        modalHeader: 'Lily: 300 pts',\n        question: 'What climates do lilies grow the best',\n        answer: 'Tropical',\n        id: 13,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '300',\n        modalHeader: 'Wedding Bells: 300 pts',\n        question: 'How much does an avergae engagment ring cost',\n        answer: '$6,163',\n        id: 14,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '300',\n        modalHeader: 'Random: 300 pts',\n        question: 'Name the world’s biggest island',\n        answer: 'Greenland',\n        id: 15,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '400',\n        modalHeader: 'Mom: 400 pts',\n        question: 'Who did mom work as in Russia',\n        answer: 'Приома Здачя',\n        id: 16,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '400',\n        modalHeader: 'Dad: 400 pts',\n        question: 'How old was dad when he got his first motorcycle',\n        answer: '14',\n        id: 17,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '400',\n        modalHeader: 'Lily: 400 pts',\n        question: 'In England in 2011, Lily was the ___ most popular name for baby girls',\n        answer: '3rd',\n        id: 18,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '400',\n        modalHeader: 'Wedding Bells: 400 pts',\n        question: 'What year did Princess Diance and Prince Charles of Wales get married',\n        answer: '1981',\n        id: 19,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '400',\n        modalHeader: 'Random: 400 pts',\n        question: 'Which was the country that first made the use of paper money',\n        answer: 'China',\n        id: 20,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '500',\n        modalHeader: 'Mom: 500 pts',\n        question: 'Mom’s favorite author/book',\n        answer: 'Кристина Рой Дорогой ценой',\n        id: 21,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '500',\n        modalHeader: 'Dad: 500 pts',\n        question: 'How many years did dad sing in the church choir in Russia',\n        answer: 'Six',\n        id: 22,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '500',\n        modalHeader: 'Lily: 500 pts',\n        question: 'What did the Greek associate Lilies with',\n        answer: 'Motherhood',\n        id: 23,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      },\n      {\n        title: '500',\n        modalHeader: 'Wedding Bells: 500 pts',\n        question: ' How many times was Elizabeth Taylor married',\n        answer: 'Eight',\n        id: 24,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      }, \n      {\n        title: '500',\n        modalHeader: 'Random: 500 pts',\n        question: 'Define Nomophobia',\n        answer: 'The phobia is characterized by feelings of anxiety that arise from being out of a phone’s range of service, not having one’s phone charged, having no credit on one’s phone or misplacing it.',\n        id: 25,\n        answered: false,\n        showModal: 0,\n        showAnswer: false\n      }\n    ],\n    timerTime: 60\n  }\n\n  // shouldComponentUpdate ( nextProps, nextState ) {\n  //   if (this.state.cards === nextState.cards &&\n  //     this.state.timerTime !== nextState.timerTime) {\n  //       return false;\n  //     } else {\n  //       return true;\n  //     }\n  // }\n\n  // https://www.freecodecamp.org/news/how-to-identify-and-resolve-wasted-renders-in-react-cc4b1e910d10/\n  // GOOGLE SEARCH: 'how to render only part of react app that updates state'\n\n  // shouldComponentUpdate ( nextProps, nextState ) {\n  //   return this.state.timerTime !== nextState.timerTime;\n  // }\n\n  componentDidUpdate () {\n    console.log('[App] DidUpdate');\n  }\n\n  showModalHandler = (index, value) => {\n    const {...cardsArray } = this.state.cards;\n    cardsArray[index].showModal = value;\n    console.log('showModal', cardsArray[index].showModal);\n    this.setState({\n      cardsArray\n    });\n    this.resetCountDown();\n  }\n\n  hideModalHandler = (e, index) => {\n    e.stopPropagation() //stops the bubble phase of event propogation \n    const {...cardsArray} = this.state.cards;\n    cardsArray[index].showModal = 0;\n    this.setState({\n      cardsArray\n    });\n    console.log('close modal');\n  }\n\n  showAnswerHandler = (e, index) => {\n    e.stopPropagation();\n    console.log('answered?', this.state.cards[index].answered);\n    const { ...cardsArray } = this.state.cards;\n    cardsArray[index].answered = true;\n    cardsArray[index].showAnswer = true;\n    this.setState({\n      cardsArray,\n      timerTime: 0\n    })\n  }\n\n  startTimer = () => {\n    this.timer = setTimeout(() => {\n      let newTime = this.state.timerTime - 1;\n      if (this.state.timerTime > 0) {\n        this.setState({\n          timerTime: newTime\n        })\n      } else {\n        clearInterval(this.timer);\n      }\n    }, 1000)\n  }\n\n  resetCountDown = () => {\n    this.setState({timerTime: 60})\n  }\n\n  // MODAL RESOURCE: assess this code https://codesandbox.io/s/pkjvy72mw0\n  // RESOURCES: https://stackoverflow.com/questions/54276832/react-how-to-display-a-modal-popup-only-for-that-specific-div\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n        <h1>Monjoseph Family Jeopardy!!!</h1>\n\n          <div className=\"col-md-12 categories\">\n            <Category>Mom</Category>\n            <Category>Dad</Category>\n            <Category>Lily</Category>\n            <Category>Wedding Bells</Category>\n            <Category>Random</Category>\n          </div>\n\n          <div className=\"col-md-12 cards\">\n            <Card \n            cards={this.state.cards}\n            showModalHandler = {this.showModalHandler}\n            hideModal = {this.hideModalHandler}\n            showAnswerHandler={this.showAnswerHandler}\n            starttimer={this.startTimer}\n            timerTime={this.state.timerTime}\n            />\n          </div>\n      \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//TO DO: make sure background is frozen when modal is displayed","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}